# Generated by Django 3.2.19 on 2023-06-14 08:48

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='bootmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('picture', models.CharField(default='/static/boot/', max_length=50)),
                ('amount', models.IntegerField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('valid', models.CharField(choices=[('Y', 'Available'), ('N', 'Not Available')], max_length=15)),
                ('code', models.CharField(default='boot-', max_length=20, unique=True)),
                ('description', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='cakemodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('picture', models.CharField(default='/static/cake/', max_length=50)),
                ('amount', models.IntegerField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('valid', models.CharField(choices=[('Y', 'Available'), ('N', 'Not Available')], max_length=15)),
                ('code', models.CharField(default='cake-', max_length=20, unique=True)),
                ('description', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='clothmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('picture', models.CharField(default='/static/cloth/', max_length=50)),
                ('amount', models.IntegerField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('valid', models.CharField(choices=[('Y', 'Available'), ('N', 'Not Available')], max_length=15)),
                ('code', models.CharField(default='cloth-', max_length=20, unique=True)),
                ('description', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='framemodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('picture', models.CharField(blank=True, max_length=50)),
                ('amount', models.IntegerField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('valid', models.CharField(choices=[('Y', 'Available'), ('N', 'Not Available')], max_length=15)),
                ('code', models.CharField(default='frame-', max_length=20, unique=True)),
                ('description', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='greetingMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='mugmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Mug Cup', max_length=30)),
                ('picture', models.CharField(default='/static/mug/', max_length=50)),
                ('amount', models.IntegerField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('valid', models.CharField(choices=[('Y', 'Available'), ('N', 'Not Available')], max_length=15)),
                ('code', models.CharField(default='mug-', max_length=20, unique=True)),
                ('description', models.TextField(default='Mug Cup || Available in color []', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='navmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('pagelink', models.CharField(max_length=10)),
                ('pagecontent', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='pillowmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('picture', models.CharField(default='/static/pillow/', max_length=50)),
                ('amount', models.IntegerField()),
                ('date_added', models.DateField(auto_now_add=True)),
                ('valid', models.CharField(choices=[('Y', 'Available'), ('N', 'Not Available')], max_length=15)),
                ('code', models.CharField(default='pillow-', max_length=20, unique=True)),
                ('description', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='userDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Username', models.CharField(max_length=20)),
                ('Gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=7)),
                ('MobileNo', models.CharField(blank=True, max_length=15)),
                ('Email', models.EmailField(blank=True, max_length=50)),
                ('Address', models.CharField(blank=True, max_length=100)),
            ],
        ),
    ]
